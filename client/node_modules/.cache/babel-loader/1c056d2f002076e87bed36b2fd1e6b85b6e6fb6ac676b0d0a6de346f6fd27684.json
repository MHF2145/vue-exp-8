{"ast":null,"code":"export default {\n  name: 'MoveDetailPopup',\n  props: {\n    move: Object,\n    isVisible: Boolean\n  },\n  data() {\n    return {\n      isFavorited: false // Status untuk cek apakah sudah favorit atau belum\n    };\n  },\n  methods: {\n    close() {\n      this.$emit('close');\n    },\n    formatMoveName(move) {\n      // Cek jika move.url ada dan formatnya benar\n      if (move && move.name && move.url) {\n        // Ekstrak ID dari URL\n        const id = move.url.split('/')[6]; // Ambil ID dari URL seperti https://pokeapi.co/api/v2/move/{id}/\n        return `${id} - ${this.capitalize(move.name)}`;\n      }\n\n      // Jika ID atau name tidak ditemukan, tampilkan error\n      return 'Unknown Move';\n    },\n    capitalize(str) {\n      if (!str) return '';\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    async markAsFavorite() {\n      if (this.isFavorited) return;\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('Token tidak ditemukan. Anda harus login terlebih dahulu.');\n        return;\n      }\n\n      // console.log('Move object:', this.move);\n      const moveId = this.move.url.split('/')[6]; // Ambil ID dari URL\n      if (!moveId) {\n        alert('ID move tidak ditemukan!');\n        return;\n      }\n\n      // console.log('Trying to favorite move with ID:', moveId);\n\n      // Persiapkan data untuk dikirim ke backend\n      const requestData = {\n        moveId: moveId,\n        // Menggunakan moveId yang diambil dari URL\n        moveName: this.capitalize(this.move.name),\n        // Kirim nama move\n        moveType: this.move.type // Kirim tipe move\n      };\n      try {\n        const response = await fetch('http://localhost:3000/favorite-moves', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}` // Mengirim token di header Authorization\n          },\n          body: JSON.stringify(requestData)\n        });\n        const data = await response.json();\n        if (response.ok) {\n          this.isFavorited = true; // Tandai sebagai favorit\n          alert('Move berhasil ditambahkan ke favorit!');\n        } else {\n          alert('Gagal menambahkan move ke favorit: ' + data.message);\n        }\n      } catch (err) {\n        alert('Terjadi kesalahan saat menambahkan move ke favorit.');\n      }\n    }\n  },\n  watch: {\n    move: {\n      immediate: true,\n      handler() {\n        this.isFavorited = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","move","Object","isVisible","Boolean","data","isFavorited","methods","close","$emit","formatMoveName","url","id","split","capitalize","str","charAt","toUpperCase","slice","markAsFavorite","token","localStorage","getItem","alert","moveId","requestData","moveName","moveType","type","response","fetch","method","headers","body","JSON","stringify","json","ok","message","err","watch","immediate","handler"],"sources":["/Users/hares/Downloads/vue-exp-8-sementara/client/src/components/MoveDetailPopup.vue"],"sourcesContent":["<template>\r\n  <div \r\n    v-if=\"isVisible\" \r\n    class=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\"\r\n  >\r\n    <div class=\"bg-white p-6 rounded-lg shadow-lg w-96\">\r\n      <div class=\"flex justify-between items-center mb-4\">\r\n        <h2 class=\"text-2xl font-bold\">{{ formatMoveName(move) }}</h2>\r\n        <button \r\n          @click=\"close\" \r\n          class=\"text-xl text-red-500 hover:text-red-700 focus:outline-none\"\r\n        >\r\n          Ã—\r\n        </button>\r\n      </div>\r\n\r\n      <div v-if=\"move.description\" class=\"mb-4\">\r\n        <p><strong>Description:</strong> {{ move.description }}</p>\r\n      </div>\r\n      <div v-else class=\"mb-4\">\r\n        <p><strong>Description:</strong> No description available.</p>\r\n      </div>\r\n\r\n      <div class=\"mb-4\">\r\n        <p><strong>Type:</strong> {{ move.type || 'N/A' }}</p>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <p><strong>Power:</strong> {{ move.power !== null ? move.power : 'N/A' }}</p>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <p><strong>Accuracy:</strong> {{ move.accuracy !== null ? move.accuracy : 'N/A' }}</p>\r\n      </div>\r\n\r\n      <!-- Tombol Favorit -->\r\n      <button \r\n        @click=\"markAsFavorite\"\r\n        :class=\"{\r\n          'bg-green-500': !isFavorited,\r\n          'bg-gray-400': isFavorited,\r\n        }\"\r\n        class=\"mt-4 px-4 py-2 text-white rounded hover:bg-green-700 transition duration-200\"\r\n        :disabled=\"isFavorited\"\r\n      >\r\n        {{ isFavorited ? 'Favorited' : 'Favorite' }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'MoveDetailPopup',\r\n  props: {\r\n    move: Object,\r\n    isVisible: Boolean,\r\n  },\r\n  data() {\r\n    return {\r\n      isFavorited: false, // Status untuk cek apakah sudah favorit atau belum\r\n    };\r\n  },\r\n  methods: {\r\n    close() {\r\n      this.$emit('close');\r\n    },\r\n    formatMoveName(move) {\r\n      // Cek jika move.url ada dan formatnya benar\r\n      if (move && move.name && move.url) {\r\n        // Ekstrak ID dari URL\r\n        const id = move.url.split('/')[6]; // Ambil ID dari URL seperti https://pokeapi.co/api/v2/move/{id}/\r\n        return `${id} - ${this.capitalize(move.name)}`;\r\n      }\r\n\r\n      // Jika ID atau name tidak ditemukan, tampilkan error\r\n      return 'Unknown Move';\r\n    },\r\n\r\n    capitalize(str) {\r\n      if (!str) return '';\r\n      return str.charAt(0).toUpperCase() + str.slice(1);\r\n    },\r\n    async markAsFavorite() {\r\n      if (this.isFavorited) return;\r\n\r\n      const token = localStorage.getItem('token'); \r\n      if (!token) {\r\n        alert('Token tidak ditemukan. Anda harus login terlebih dahulu.');\r\n        return;\r\n      }\r\n\r\n      // console.log('Move object:', this.move);\r\n      const moveId = this.move.url.split('/')[6]; // Ambil ID dari URL\r\n      if (!moveId) {\r\n        alert('ID move tidak ditemukan!');\r\n        return;\r\n      }\r\n\r\n      // console.log('Trying to favorite move with ID:', moveId);\r\n\r\n      // Persiapkan data untuk dikirim ke backend\r\n      const requestData = {\r\n        moveId: moveId,        // Menggunakan moveId yang diambil dari URL\r\n        moveName: this.capitalize(this.move.name),  // Kirim nama move\r\n        moveType: this.move.type,    // Kirim tipe move\r\n      };\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:3000/favorite-moves', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`,  // Mengirim token di header Authorization\r\n          },\r\n          body: JSON.stringify(requestData),\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          this.isFavorited = true; // Tandai sebagai favorit\r\n          alert('Move berhasil ditambahkan ke favorit!');\r\n        } else {\r\n          alert('Gagal menambahkan move ke favorit: ' + data.message);\r\n        }\r\n      } catch (err) {\r\n        alert('Terjadi kesalahan saat menambahkan move ke favorit.');\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    move: {\r\n      immediate: true,\r\n      handler() {\r\n        this.isFavorited = false;\r\n      },\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Tambahkan styling jika diperlukan */\r\n</style>\r\n"],"mappings":"AAkDA,eAAe;EACbA,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,IAAI,EAAEC,MAAM;IACZC,SAAS,EAAEC;EACb,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,KAAK,CAAE;IACtB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAG;MACN,IAAI,CAACC,KAAK,CAAC,OAAO,CAAC;IACrB,CAAC;IACDC,cAAcA,CAACT,IAAI,EAAE;MACnB;MACA,IAAIA,IAAG,IAAKA,IAAI,CAACF,IAAG,IAAKE,IAAI,CAACU,GAAG,EAAE;QACjC;QACA,MAAMC,EAAC,GAAIX,IAAI,CAACU,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;QACnC,OAAO,GAAGD,EAAE,MAAM,IAAI,CAACE,UAAU,CAACb,IAAI,CAACF,IAAI,CAAC,EAAE;MAChD;;MAEA;MACA,OAAO,cAAc;IACvB,CAAC;IAEDe,UAAUA,CAACC,GAAG,EAAE;MACd,IAAI,CAACA,GAAG,EAAE,OAAO,EAAE;MACnB,OAAOA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,IAAIF,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC;IACnD,CAAC;IACD,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI,IAAI,CAACb,WAAW,EAAE;MAEtB,MAAMc,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVG,KAAK,CAAC,0DAA0D,CAAC;QACjE;MACF;;MAEA;MACA,MAAMC,MAAK,GAAI,IAAI,CAACvB,IAAI,CAACU,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;MAC5C,IAAI,CAACW,MAAM,EAAE;QACXD,KAAK,CAAC,0BAA0B,CAAC;QACjC;MACF;;MAEA;;MAEA;MACA,MAAME,WAAU,GAAI;QAClBD,MAAM,EAAEA,MAAM;QAAS;QACvBE,QAAQ,EAAE,IAAI,CAACZ,UAAU,CAAC,IAAI,CAACb,IAAI,CAACF,IAAI,CAAC;QAAG;QAC5C4B,QAAQ,EAAE,IAAI,CAAC1B,IAAI,CAAC2B,IAAI,CAAK;MAC/B,CAAC;MAED,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,sCAAsC,EAAE;UACnEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,UAAUZ,KAAK,EAAE,CAAG;UACvC,CAAC;UACDa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,WAAW;QAClC,CAAC,CAAC;QAEF,MAAMpB,IAAG,GAAI,MAAMwB,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;UACf,IAAI,CAAC/B,WAAU,GAAI,IAAI,EAAE;UACzBiB,KAAK,CAAC,uCAAuC,CAAC;QAChD,OAAO;UACLA,KAAK,CAAC,qCAAoC,GAAIlB,IAAI,CAACiC,OAAO,CAAC;QAC7D;MACF,EAAE,OAAOC,GAAG,EAAE;QACZhB,KAAK,CAAC,qDAAqD,CAAC;MAC9D;IACF;EACF,CAAC;EACDiB,KAAK,EAAE;IACLvC,IAAI,EAAE;MACJwC,SAAS,EAAE,IAAI;MACfC,OAAOA,CAAA,EAAG;QACR,IAAI,CAACpC,WAAU,GAAI,KAAK;MAC1B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}